// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class ControllerStateT {
  private float throttle;
  private float steer;
  private float pitch;
  private float yaw;
  private float roll;
  private boolean jump;
  private boolean boost;
  private boolean handbrake;
  private boolean useItem;

  public float getThrottle() { return throttle; }

  public void setThrottle(float throttle) { this.throttle = throttle; }

  public float getSteer() { return steer; }

  public void setSteer(float steer) { this.steer = steer; }

  public float getPitch() { return pitch; }

  public void setPitch(float pitch) { this.pitch = pitch; }

  public float getYaw() { return yaw; }

  public void setYaw(float yaw) { this.yaw = yaw; }

  public float getRoll() { return roll; }

  public void setRoll(float roll) { this.roll = roll; }

  public boolean getJump() { return jump; }

  public void setJump(boolean jump) { this.jump = jump; }

  public boolean getBoost() { return boost; }

  public void setBoost(boolean boost) { this.boost = boost; }

  public boolean getHandbrake() { return handbrake; }

  public void setHandbrake(boolean handbrake) { this.handbrake = handbrake; }

  public boolean getUseItem() { return useItem; }

  public void setUseItem(boolean useItem) { this.useItem = useItem; }


  public ControllerStateT() {
    this.throttle = 0.0f;
    this.steer = 0.0f;
    this.pitch = 0.0f;
    this.yaw = 0.0f;
    this.roll = 0.0f;
    this.jump = false;
    this.boost = false;
    this.handbrake = false;
    this.useItem = false;
  }
}

