// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Packet containing a InterfaceMessage
 */
@SuppressWarnings("unused")
public final class InterfacePacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static InterfacePacket getRootAsInterfacePacket(ByteBuffer _bb) { return getRootAsInterfacePacket(_bb, new InterfacePacket()); }
  public static InterfacePacket getRootAsInterfacePacket(ByteBuffer _bb, InterfacePacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public InterfacePacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte messageType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table message(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createInterfacePacket(FlatBufferBuilder builder,
      byte messageType,
      int messageOffset) {
    builder.startTable(2);
    InterfacePacket.addMessage(builder, messageOffset);
    InterfacePacket.addMessageType(builder, messageType);
    return InterfacePacket.endInterfacePacket(builder);
  }

  public static void startInterfacePacket(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMessageType(FlatBufferBuilder builder, byte messageType) { builder.addByte(0, messageType, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(1, messageOffset, 0); }
  public static int endInterfacePacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // message
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public InterfacePacket get(int j) { return get(new InterfacePacket(), j); }
    public InterfacePacket get(InterfacePacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public InterfacePacketT unpack() {
    InterfacePacketT _o = new InterfacePacketT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(InterfacePacketT _o) {
    rlbot.flat.InterfaceMessageUnion _oMessage = new rlbot.flat.InterfaceMessageUnion();
    byte _oMessageType = messageType();
    _oMessage.setType(_oMessageType);
    Table _oMessageValue;
    switch (_oMessageType) {
      case rlbot.flat.InterfaceMessage.DisconnectSignal:
        _oMessageValue = message(new rlbot.flat.DisconnectSignal());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.DisconnectSignal) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.StartCommand:
        _oMessageValue = message(new rlbot.flat.StartCommand());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.StartCommand) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.MatchConfiguration:
        _oMessageValue = message(new rlbot.flat.MatchConfiguration());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.MatchConfiguration) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.PlayerInput:
        _oMessageValue = message(new rlbot.flat.PlayerInput());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.PlayerInput) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.DesiredGameState:
        _oMessageValue = message(new rlbot.flat.DesiredGameState());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.DesiredGameState) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.RenderGroup:
        _oMessageValue = message(new rlbot.flat.RenderGroup());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.RenderGroup) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.RemoveRenderGroup:
        _oMessageValue = message(new rlbot.flat.RemoveRenderGroup());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.RemoveRenderGroup) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.MatchComm:
        _oMessageValue = message(new rlbot.flat.MatchComm());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.MatchComm) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.ConnectionSettings:
        _oMessageValue = message(new rlbot.flat.ConnectionSettings());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.ConnectionSettings) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.StopCommand:
        _oMessageValue = message(new rlbot.flat.StopCommand());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.StopCommand) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.SetLoadout:
        _oMessageValue = message(new rlbot.flat.SetLoadout());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.SetLoadout) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.InitComplete:
        _oMessageValue = message(new rlbot.flat.InitComplete());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.InitComplete) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.InterfaceMessage.RenderingStatus:
        _oMessageValue = message(new rlbot.flat.RenderingStatus());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.RenderingStatus) _oMessageValue).unpack() : null);
        break;
      default: break;
    }
    _o.setMessage(_oMessage);
  }
  public static int pack(FlatBufferBuilder builder, InterfacePacketT _o) {
    if (_o == null) return 0;
    byte _messageType = _o.getMessage() == null ? rlbot.flat.InterfaceMessage.NONE : _o.getMessage().getType();
    int _message = _o.getMessage() == null ? 0 : rlbot.flat.InterfaceMessageUnion.pack(builder, _o.getMessage());
    return createInterfacePacket(
      builder,
      _messageType,
      _message);
  }
}

