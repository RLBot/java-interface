// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * A RenderMessage, describing a piece of debug rendering.
 */
@SuppressWarnings("unused")
public final class RenderMessage extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static RenderMessage getRootAsRenderMessage(ByteBuffer _bb) { return getRootAsRenderMessage(_bb, new RenderMessage()); }
  public static RenderMessage getRootAsRenderMessage(ByteBuffer _bb, RenderMessage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RenderMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte varietyType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table variety(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createRenderMessage(FlatBufferBuilder builder,
      byte varietyType,
      int varietyOffset) {
    builder.startTable(2);
    RenderMessage.addVariety(builder, varietyOffset);
    RenderMessage.addVarietyType(builder, varietyType);
    return RenderMessage.endRenderMessage(builder);
  }

  public static void startRenderMessage(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addVarietyType(FlatBufferBuilder builder, byte varietyType) { builder.addByte(0, varietyType, 0); }
  public static void addVariety(FlatBufferBuilder builder, int varietyOffset) { builder.addOffset(1, varietyOffset, 0); }
  public static int endRenderMessage(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // variety
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RenderMessage get(int j) { return get(new RenderMessage(), j); }
    public RenderMessage get(RenderMessage obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public RenderMessageT unpack() {
    RenderMessageT _o = new RenderMessageT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(RenderMessageT _o) {
    rlbot.flat.RenderTypeUnion _oVariety = new rlbot.flat.RenderTypeUnion();
    byte _oVarietyType = varietyType();
    _oVariety.setType(_oVarietyType);
    Table _oVarietyValue;
    switch (_oVarietyType) {
      case rlbot.flat.RenderType.Line3D:
        _oVarietyValue = variety(new rlbot.flat.Line3D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.Line3D) _oVarietyValue).unpack() : null);
        break;
      case rlbot.flat.RenderType.PolyLine3D:
        _oVarietyValue = variety(new rlbot.flat.PolyLine3D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.PolyLine3D) _oVarietyValue).unpack() : null);
        break;
      case rlbot.flat.RenderType.String2D:
        _oVarietyValue = variety(new rlbot.flat.String2D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.String2D) _oVarietyValue).unpack() : null);
        break;
      case rlbot.flat.RenderType.String3D:
        _oVarietyValue = variety(new rlbot.flat.String3D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.String3D) _oVarietyValue).unpack() : null);
        break;
      case rlbot.flat.RenderType.Rect2D:
        _oVarietyValue = variety(new rlbot.flat.Rect2D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.Rect2D) _oVarietyValue).unpack() : null);
        break;
      case rlbot.flat.RenderType.Rect3D:
        _oVarietyValue = variety(new rlbot.flat.Rect3D());
        _oVariety.setValue(_oVarietyValue != null ? ((rlbot.flat.Rect3D) _oVarietyValue).unpack() : null);
        break;
      default: break;
    }
    _o.setVariety(_oVariety);
  }
  public static int pack(FlatBufferBuilder builder, RenderMessageT _o) {
    if (_o == null) return 0;
    byte _varietyType = _o.getVariety() == null ? rlbot.flat.RenderType.NONE : _o.getVariety().getType();
    int _variety = _o.getVariety() == null ? 0 : rlbot.flat.RenderTypeUnion.pack(builder, _o.getVariety());
    return createRenderMessage(
      builder,
      _varietyType,
      _variety);
  }
}

