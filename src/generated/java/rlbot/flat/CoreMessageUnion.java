// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.FlatBufferBuilder;

public class CoreMessageUnion {
  private byte type;
  private Object value;

  public byte getType() { return type; }

  public void setType(byte type) { this.type = type; }

  public Object getValue() { return value; }

  public void setValue(Object value) { this.value = value; }

  public CoreMessageUnion() {
    this.type = CoreMessage.NONE;
    this.value = null;
  }

  public rlbot.flat.DisconnectSignalT asDisconnectSignal() { return (rlbot.flat.DisconnectSignalT) value; }
  public rlbot.flat.GamePacketT asGamePacket() { return (rlbot.flat.GamePacketT) value; }
  public rlbot.flat.FieldInfoT asFieldInfo() { return (rlbot.flat.FieldInfoT) value; }
  public rlbot.flat.MatchConfigurationT asMatchConfiguration() { return (rlbot.flat.MatchConfigurationT) value; }
  public rlbot.flat.MatchCommT asMatchComm() { return (rlbot.flat.MatchCommT) value; }
  public rlbot.flat.BallPredictionT asBallPrediction() { return (rlbot.flat.BallPredictionT) value; }
  public rlbot.flat.ControllableTeamInfoT asControllableTeamInfo() { return (rlbot.flat.ControllableTeamInfoT) value; }
  public rlbot.flat.RenderingStatusT asRenderingStatus() { return (rlbot.flat.RenderingStatusT) value; }

  public static int pack(FlatBufferBuilder builder, CoreMessageUnion _o) {
    switch (_o.type) {
      case CoreMessage.DisconnectSignal: return rlbot.flat.DisconnectSignal.pack(builder, _o.asDisconnectSignal());
      case CoreMessage.GamePacket: return rlbot.flat.GamePacket.pack(builder, _o.asGamePacket());
      case CoreMessage.FieldInfo: return rlbot.flat.FieldInfo.pack(builder, _o.asFieldInfo());
      case CoreMessage.MatchConfiguration: return rlbot.flat.MatchConfiguration.pack(builder, _o.asMatchConfiguration());
      case CoreMessage.MatchComm: return rlbot.flat.MatchComm.pack(builder, _o.asMatchComm());
      case CoreMessage.BallPrediction: return rlbot.flat.BallPrediction.pack(builder, _o.asBallPrediction());
      case CoreMessage.ControllableTeamInfo: return rlbot.flat.ControllableTeamInfo.pack(builder, _o.asControllableTeamInfo());
      case CoreMessage.RenderingStatus: return rlbot.flat.RenderingStatus.pack(builder, _o.asRenderingStatus());
      default: return 0;
    }
  }
}

