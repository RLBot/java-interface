// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class Rect2DT {
  private float x;
  private float y;
  private float width;
  private float height;
  private rlbot.flat.ColorT color;
  private int hAlign;
  private int vAlign;

  public float getX() { return x; }

  public void setX(float x) { this.x = x; }

  public float getY() { return y; }

  public void setY(float y) { this.y = y; }

  public float getWidth() { return width; }

  public void setWidth(float width) { this.width = width; }

  public float getHeight() { return height; }

  public void setHeight(float height) { this.height = height; }

  public rlbot.flat.ColorT getColor() { return color; }

  public void setColor(rlbot.flat.ColorT color) { this.color = color; }

  public int getHAlign() { return hAlign; }

  public void setHAlign(int hAlign) { this.hAlign = hAlign; }

  public int getVAlign() { return vAlign; }

  public void setVAlign(int vAlign) { this.vAlign = vAlign; }


  public Rect2DT() {
    this.x = 0.0f;
    this.y = 0.0f;
    this.width = 0.0f;
    this.height = 0.0f;
    this.color = new rlbot.flat.ColorT();
    this.hAlign = 0;
    this.vAlign = 0;
  }
}

