// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Packet containing a CoreMessage
 */
@SuppressWarnings("unused")
public final class CorePacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static CorePacket getRootAsCorePacket(ByteBuffer _bb) { return getRootAsCorePacket(_bb, new CorePacket()); }
  public static CorePacket getRootAsCorePacket(ByteBuffer _bb, CorePacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CorePacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte messageType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table message(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createCorePacket(FlatBufferBuilder builder,
      byte messageType,
      int messageOffset) {
    builder.startTable(2);
    CorePacket.addMessage(builder, messageOffset);
    CorePacket.addMessageType(builder, messageType);
    return CorePacket.endCorePacket(builder);
  }

  public static void startCorePacket(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMessageType(FlatBufferBuilder builder, byte messageType) { builder.addByte(0, messageType, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(1, messageOffset, 0); }
  public static int endCorePacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // message
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CorePacket get(int j) { return get(new CorePacket(), j); }
    public CorePacket get(CorePacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public CorePacketT unpack() {
    CorePacketT _o = new CorePacketT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(CorePacketT _o) {
    rlbot.flat.CoreMessageUnion _oMessage = new rlbot.flat.CoreMessageUnion();
    byte _oMessageType = messageType();
    _oMessage.setType(_oMessageType);
    Table _oMessageValue;
    switch (_oMessageType) {
      case rlbot.flat.CoreMessage.DisconnectSignal:
        _oMessageValue = message(new rlbot.flat.DisconnectSignal());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.DisconnectSignal) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.GamePacket:
        _oMessageValue = message(new rlbot.flat.GamePacket());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.GamePacket) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.FieldInfo:
        _oMessageValue = message(new rlbot.flat.FieldInfo());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.FieldInfo) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.MatchConfiguration:
        _oMessageValue = message(new rlbot.flat.MatchConfiguration());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.MatchConfiguration) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.MatchComm:
        _oMessageValue = message(new rlbot.flat.MatchComm());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.MatchComm) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.BallPrediction:
        _oMessageValue = message(new rlbot.flat.BallPrediction());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.BallPrediction) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.ControllableTeamInfo:
        _oMessageValue = message(new rlbot.flat.ControllableTeamInfo());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.ControllableTeamInfo) _oMessageValue).unpack() : null);
        break;
      case rlbot.flat.CoreMessage.RenderingStatus:
        _oMessageValue = message(new rlbot.flat.RenderingStatus());
        _oMessage.setValue(_oMessageValue != null ? ((rlbot.flat.RenderingStatus) _oMessageValue).unpack() : null);
        break;
      default: break;
    }
    _o.setMessage(_oMessage);
  }
  public static int pack(FlatBufferBuilder builder, CorePacketT _o) {
    if (_o == null) return 0;
    byte _messageType = _o.getMessage() == null ? rlbot.flat.CoreMessage.NONE : _o.getMessage().getType();
    int _message = _o.getMessage() == null ? 0 : rlbot.flat.CoreMessageUnion.pack(builder, _o.getMessage());
    return createCorePacket(
      builder,
      _messageType,
      _message);
  }
}

