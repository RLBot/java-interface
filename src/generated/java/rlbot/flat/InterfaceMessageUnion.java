// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.FlatBufferBuilder;

public class InterfaceMessageUnion {
  private byte type;
  private Object value;

  public byte getType() { return type; }

  public void setType(byte type) { this.type = type; }

  public Object getValue() { return value; }

  public void setValue(Object value) { this.value = value; }

  public InterfaceMessageUnion() {
    this.type = InterfaceMessage.NONE;
    this.value = null;
  }

  public rlbot.flat.DisconnectSignalT asDisconnectSignal() { return (rlbot.flat.DisconnectSignalT) value; }
  public rlbot.flat.StartCommandT asStartCommand() { return (rlbot.flat.StartCommandT) value; }
  public rlbot.flat.MatchConfigurationT asMatchConfiguration() { return (rlbot.flat.MatchConfigurationT) value; }
  public rlbot.flat.PlayerInputT asPlayerInput() { return (rlbot.flat.PlayerInputT) value; }
  public rlbot.flat.DesiredGameStateT asDesiredGameState() { return (rlbot.flat.DesiredGameStateT) value; }
  public rlbot.flat.RenderGroupT asRenderGroup() { return (rlbot.flat.RenderGroupT) value; }
  public rlbot.flat.RemoveRenderGroupT asRemoveRenderGroup() { return (rlbot.flat.RemoveRenderGroupT) value; }
  public rlbot.flat.MatchCommT asMatchComm() { return (rlbot.flat.MatchCommT) value; }
  public rlbot.flat.ConnectionSettingsT asConnectionSettings() { return (rlbot.flat.ConnectionSettingsT) value; }
  public rlbot.flat.StopCommandT asStopCommand() { return (rlbot.flat.StopCommandT) value; }
  public rlbot.flat.SetLoadoutT asSetLoadout() { return (rlbot.flat.SetLoadoutT) value; }
  public rlbot.flat.InitCompleteT asInitComplete() { return (rlbot.flat.InitCompleteT) value; }
  public rlbot.flat.RenderingStatusT asRenderingStatus() { return (rlbot.flat.RenderingStatusT) value; }

  public static int pack(FlatBufferBuilder builder, InterfaceMessageUnion _o) {
    switch (_o.type) {
      case InterfaceMessage.DisconnectSignal: return rlbot.flat.DisconnectSignal.pack(builder, _o.asDisconnectSignal());
      case InterfaceMessage.StartCommand: return rlbot.flat.StartCommand.pack(builder, _o.asStartCommand());
      case InterfaceMessage.MatchConfiguration: return rlbot.flat.MatchConfiguration.pack(builder, _o.asMatchConfiguration());
      case InterfaceMessage.PlayerInput: return rlbot.flat.PlayerInput.pack(builder, _o.asPlayerInput());
      case InterfaceMessage.DesiredGameState: return rlbot.flat.DesiredGameState.pack(builder, _o.asDesiredGameState());
      case InterfaceMessage.RenderGroup: return rlbot.flat.RenderGroup.pack(builder, _o.asRenderGroup());
      case InterfaceMessage.RemoveRenderGroup: return rlbot.flat.RemoveRenderGroup.pack(builder, _o.asRemoveRenderGroup());
      case InterfaceMessage.MatchComm: return rlbot.flat.MatchComm.pack(builder, _o.asMatchComm());
      case InterfaceMessage.ConnectionSettings: return rlbot.flat.ConnectionSettings.pack(builder, _o.asConnectionSettings());
      case InterfaceMessage.StopCommand: return rlbot.flat.StopCommand.pack(builder, _o.asStopCommand());
      case InterfaceMessage.SetLoadout: return rlbot.flat.SetLoadout.pack(builder, _o.asSetLoadout());
      case InterfaceMessage.InitComplete: return rlbot.flat.InitComplete.pack(builder, _o.asInitComplete());
      case InterfaceMessage.RenderingStatus: return rlbot.flat.RenderingStatus.pack(builder, _o.asRenderingStatus());
      default: return 0;
    }
  }
}

