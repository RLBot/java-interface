// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * A client message to stop a match and optionally the RLBot server too.
 */
@SuppressWarnings("unused")
public final class StopCommand extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static StopCommand getRootAsStopCommand(ByteBuffer _bb) { return getRootAsStopCommand(_bb, new StopCommand()); }
  public static StopCommand getRootAsStopCommand(ByteBuffer _bb, StopCommand obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public StopCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean shutdownServer() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createStopCommand(FlatBufferBuilder builder,
      boolean shutdownServer) {
    builder.startTable(1);
    StopCommand.addShutdownServer(builder, shutdownServer);
    return StopCommand.endStopCommand(builder);
  }

  public static void startStopCommand(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addShutdownServer(FlatBufferBuilder builder, boolean shutdownServer) { builder.addBoolean(0, shutdownServer, false); }
  public static int endStopCommand(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public StopCommand get(int j) { return get(new StopCommand(), j); }
    public StopCommand get(StopCommand obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public StopCommandT unpack() {
    StopCommandT _o = new StopCommandT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(StopCommandT _o) {
    boolean _oShutdownServer = shutdownServer();
    _o.setShutdownServer(_oShutdownServer);
  }
  public static int pack(FlatBufferBuilder builder, StopCommandT _o) {
    if (_o == null) return 0;
    return createStopCommand(
      builder,
      _o.getShutdownServer());
  }
}

