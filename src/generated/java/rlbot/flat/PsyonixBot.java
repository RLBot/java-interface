// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * A Psyonix bot, e.g. All Star bot.
 */
@SuppressWarnings("unused")
public final class PsyonixBot extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static PsyonixBot getRootAsPsyonixBot(ByteBuffer _bb) { return getRootAsPsyonixBot(_bb, new PsyonixBot()); }
  public static PsyonixBot getRootAsPsyonixBot(ByteBuffer _bb, PsyonixBot obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PsyonixBot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Requested bot name. When match start, RLBot will ensure each bot has a unique name; bots with
   * duplicate names will be renamed with a suffix like `(2)`. For psyonix bots, a blank name will
   * be replaced with one of the official names.
   */
  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * The loadout of the player.
   */
  public rlbot.flat.PlayerLoadout loadout() { return loadout(new rlbot.flat.PlayerLoadout()); }
  public rlbot.flat.PlayerLoadout loadout(rlbot.flat.PlayerLoadout obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int botSkill() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createPsyonixBot(FlatBufferBuilder builder,
      int nameOffset,
      int loadoutOffset,
      int botSkill) {
    builder.startTable(3);
    PsyonixBot.addLoadout(builder, loadoutOffset);
    PsyonixBot.addName(builder, nameOffset);
    PsyonixBot.addBotSkill(builder, botSkill);
    return PsyonixBot.endPsyonixBot(builder);
  }

  public static void startPsyonixBot(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addLoadout(FlatBufferBuilder builder, int loadoutOffset) { builder.addOffset(1, loadoutOffset, 0); }
  public static void addBotSkill(FlatBufferBuilder builder, int botSkill) { builder.addByte(2, (byte) botSkill, (byte) 0); }
  public static int endPsyonixBot(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // name
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PsyonixBot get(int j) { return get(new PsyonixBot(), j); }
    public PsyonixBot get(PsyonixBot obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public PsyonixBotT unpack() {
    PsyonixBotT _o = new PsyonixBotT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(PsyonixBotT _o) {
    String _oName = name();
    _o.setName(_oName);
    if (loadout() != null) _o.setLoadout(loadout().unpack());
    else _o.setLoadout(null);
    int _oBotSkill = botSkill();
    _o.setBotSkill(_oBotSkill);
  }
  public static int pack(FlatBufferBuilder builder, PsyonixBotT _o) {
    if (_o == null) return 0;
    int _name = _o.getName() == null ? 0 : builder.createString(_o.getName());
    int _loadout = _o.getLoadout() == null ? 0 : rlbot.flat.PlayerLoadout.pack(builder, _o.getLoadout());
    return createPsyonixBot(
      builder,
      _name,
      _loadout,
      _o.getBotSkill());
  }
}

