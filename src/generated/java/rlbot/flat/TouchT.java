// automatically generated by the FlatBuffers compiler, do not modify

package rlbot.flat;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class TouchT {
  private float gameSeconds;
  private rlbot.flat.Vector3T location;
  private rlbot.flat.Vector3T normal;
  private long ballIndex;

  public float getGameSeconds() { return gameSeconds; }

  public void setGameSeconds(float gameSeconds) { this.gameSeconds = gameSeconds; }

  public rlbot.flat.Vector3T getLocation() { return location; }

  public void setLocation(rlbot.flat.Vector3T location) { this.location = location; }

  public rlbot.flat.Vector3T getNormal() { return normal; }

  public void setNormal(rlbot.flat.Vector3T normal) { this.normal = normal; }

  public long getBallIndex() { return ballIndex; }

  public void setBallIndex(long ballIndex) { this.ballIndex = ballIndex; }


  public TouchT() {
    this.gameSeconds = 0.0f;
    this.location = new rlbot.flat.Vector3T();
    this.normal = new rlbot.flat.Vector3T();
    this.ballIndex = 0L;
  }
}

